use crate::State;

#[allow(improper_ctypes, dead_code)]
unsafe extern "C" {
	pub safe fn adc_immediate(state: &mut State, val: u8);
	pub safe fn adc_zero_page(state: &mut State, val: u8);
	pub safe fn adc_zero_page_x(state: &mut State, val: u8);
	pub safe fn adc_absolute(state: &mut State, val: u8);
	pub safe fn adc_absolute_x(state: &mut State, val: u8);
	pub safe fn adc_absolute_y(state: &mut State, val: u8);
	pub safe fn adc_indirect_x(state: &mut State, val: u8);
	pub safe fn adc_indirect_y(state: &mut State, val: u8);
	pub safe fn and_immediate(state: &mut State, val: u8);
	pub safe fn and_zero_page(state: &mut State, val: u8);
	pub safe fn and_zero_page_x(state: &mut State, val: u8);
	pub safe fn and_absolute(state: &mut State, val: u8);
	pub safe fn and_absolute_x(state: &mut State, val: u8);
	pub safe fn and_absolute_y(state: &mut State, val: u8);
	pub safe fn and_indirect_x(state: &mut State, val: u8);
	pub safe fn and_indirect_y(state: &mut State, val: u8);
	pub safe fn asl_accumulator(state: &mut State);
	pub safe fn asl_zero_page(state: &mut State, val: u8);
	pub safe fn asl_zero_page_x(state: &mut State, val: u8);
	pub safe fn asl_absolute(state: &mut State, val: u8);
	pub safe fn asl_absolute_x(state: &mut State, val: u8);
	pub safe fn bcc(state: &mut State, val: i8);
	pub safe fn bcs(state: &mut State, val: i8);
	pub safe fn beq(state: &mut State, val: i8);
	pub safe fn bit_zero_page(state: &mut State, val: u8);
	pub safe fn bit_absolute(state: &mut State, val: u8);
	pub safe fn bmi(state: &mut State, val: i8);
	pub safe fn bne(state: &mut State, val: i8);
	pub safe fn bpl(state: &mut State, val: i8);
	pub safe fn brk(state: &mut State);
	pub safe fn bvc(state: &mut State, val: i8);
	pub safe fn bvs(state: &mut State, val: i8);
	pub safe fn clc(state: &mut State);
	pub safe fn cld(state: &mut State);
	pub safe fn cli(state: &mut State);
	pub safe fn clv(state: &mut State);
	pub safe fn cmp_immediate(state: &mut State, val: u8);
	pub safe fn cmp_zero_page(state: &mut State, val: u8);
	pub safe fn cmp_zero_page_x(state: &mut State, val: u8);
	pub safe fn cmp_absolute(state: &mut State, val: u8);
	pub safe fn cmp_absolute_x(state: &mut State, val: u8);
	pub safe fn cmp_absolute_y(state: &mut State, val: u8);
	pub safe fn cmp_indirect_x(state: &mut State, val: u8);
	pub safe fn cmp_indirect_y(state: &mut State, val: u8);
	pub safe fn cpx_immediate(state: &mut State, val: u8);
	pub safe fn cpx_zero_page(state: &mut State, val: u8);
	pub safe fn cpx_absolute(state: &mut State, val: u8);
	pub safe fn cpy_immediate(state: &mut State, val: u8);
	pub safe fn cpy_zero_page(state: &mut State, val: u8);
	pub safe fn cpy_absolute(state: &mut State, val: u8);
	pub safe fn dec_zero_page(state: &mut State, val: u8);
	pub safe fn dec_zero_page_x(state: &mut State, val: u8);
	pub safe fn dec_absolute(state: &mut State, val: u8);
	pub safe fn dec_absolute_x(state: &mut State, val: u8);
	pub safe fn dex(state: &mut State);
	pub safe fn dey(state: &mut State);
	pub safe fn eor_immediate(state: &mut State, val: u8);
	pub safe fn eor_zero_page(state: &mut State, val: u8);
	pub safe fn eor_zero_page_x(state: &mut State, val: u8);
	pub safe fn eor_absolute(state: &mut State, val: u8);
	pub safe fn eor_absolute_x(state: &mut State, val: u8);
	pub safe fn eor_absolute_y(state: &mut State, val: u8);
	pub safe fn eor_indirect_x(state: &mut State, val: u8);
	pub safe fn eor_indirect_y(state: &mut State, val: u8);
	pub safe fn inc_zero_page(state: &mut State, val: u8);
	pub safe fn inc_zero_page_x(state: &mut State, val: u8);
	pub safe fn inc_absolute(state: &mut State, val: u8);
	pub safe fn inc_absolute_x(state: &mut State, val: u8);
	pub safe fn inx(state: &mut State);
	pub safe fn iny(state: &mut State);
	pub safe fn jmp_absolute(state: &mut State, adr: u16);
	pub safe fn jmp_indirect(state: &mut State, adr: u16);
	pub safe fn jsr(state: &mut State, adr: u16);
	pub safe fn lda_immediate(state: &mut State, val: u8);
	pub safe fn lda_zero_page(state: &mut State, val: u8);
	pub safe fn lda_zero_page_x(state: &mut State, val: u8);
	pub safe fn lda_absolute(state: &mut State, val: u8);
	pub safe fn lda_absolute_x(state: &mut State, val: u8);
	pub safe fn lda_absolute_y(state: &mut State, val: u8);
	pub safe fn lda_indirect_x(state: &mut State, val: u8);
	pub safe fn lda_indirect_y(state: &mut State, val: u8);
	pub safe fn ldx_immediate(state: &mut State, val: u8);
	pub safe fn ldx_zero_page(state: &mut State, val: u8);
	pub safe fn ldx_zero_page_y(state: &mut State, val: u8);
	pub safe fn ldx_absolute(state: &mut State, val: u8);
	pub safe fn ldx_absolute_y(state: &mut State, val: u8);
	pub safe fn ldy_immediate(state: &mut State, val: u8);
	pub safe fn ldy_zero_page(state: &mut State, val: u8);
	pub safe fn ldy_zero_page_x(state: &mut State, val: u8);
	pub safe fn ldy_absolute(state: &mut State, val: u8);
	pub safe fn ldy_absolute_x(state: &mut State, val: u8);
	pub safe fn lsr_accumulator(state: &mut State);
	pub safe fn lsr_zero_page(state: &mut State, val: u8);
	pub safe fn lsr_zero_page_x(state: &mut State, val: u8);
	pub safe fn lsr_absolute(state: &mut State, val: u8);
	pub safe fn lsr_absolute_x(state: &mut State, val: u8);
	pub safe fn nop(state: &mut State);
	pub safe fn ora_immediate(state: &mut State, val: u8);
	pub safe fn ora_zero_page(state: &mut State, val: u8);
	pub safe fn ora_zero_page_x(state: &mut State, val: u8);
	pub safe fn ora_absolute(state: &mut State, val: u8);
	pub safe fn ora_absolute_x(state: &mut State, val: u8);
	pub safe fn ora_absolute_y(state: &mut State, val: u8);
	pub safe fn ora_indirect_x(state: &mut State, val: u8);
	pub safe fn ora_indirect_y(state: &mut State, val: u8);
	pub safe fn pha(state: &mut State);
	pub safe fn php(state: &mut State);
	pub safe fn pla(state: &mut State);
	pub safe fn plp(state: &mut State);
	pub safe fn rol_accumulator(state: &mut State);
	pub safe fn rol_zero_page(state: &mut State, val: u8);
	pub safe fn rol_zero_page_x(state: &mut State, val: u8);
	pub safe fn rol_absolute(state: &mut State, val: u8);
	pub safe fn rol_absolute_x(state: &mut State, val: u8);
	pub safe fn ror_accumulator(state: &mut State);
	pub safe fn ror_zero_page(state: &mut State, val: u8);
	pub safe fn ror_zero_page_x(state: &mut State, val: u8);
	pub safe fn ror_absolute(state: &mut State, val: u8);
	pub safe fn ror_absolute_x(state: &mut State, val: u8);
	pub safe fn rti(state: &mut State);
	pub safe fn rts(state: &mut State);
	pub safe fn sbc_immediate(state: &mut State, val: u8);
	pub safe fn sbc_zero_page(state: &mut State, val: u8);
	pub safe fn sbc_zero_page_x(state: &mut State, val: u8);
	pub safe fn sbc_absolute(state: &mut State, val: u8);
	pub safe fn sbc_absolute_x(state: &mut State, val: u8);
	pub safe fn sbc_absolute_y(state: &mut State, val: u8);
	pub safe fn sbc_indirect_x(state: &mut State, val: u8);
	pub safe fn sbc_indirect_y(state: &mut State, val: u8);
	pub safe fn sec(state: &mut State);
	pub safe fn sed(state: &mut State);
	pub safe fn sei(state: &mut State);
	pub safe fn sta_zero_page(state: &mut State, val: u8);
	pub safe fn sta_zero_page_x(state: &mut State, val: u8);
	pub safe fn sta_absolute(state: &mut State, val: u16);
	pub safe fn sta_absolute_x(state: &mut State, val: u16);
	pub safe fn sta_absolute_y(state: &mut State, val: u16);
	pub safe fn sta_indirect_x(state: &mut State, val: u8);
	pub safe fn sta_indirect_y(state: &mut State, val: u8);
	pub safe fn stx_zero_page(state: &mut State, val: u8);
	pub safe fn stx_zero_page_y(state: &mut State, val: u8);
	pub safe fn stx_absolute(state: &mut State, val: u8);
	pub safe fn sty_zero_page(state: &mut State, val: u8);
	pub safe fn sty_zero_page_x(state: &mut State, val: u8);
	pub safe fn sty_absolute(state: &mut State, val: u8);
	pub safe fn tax(state: &mut State);
	pub safe fn tay(state: &mut State);
	pub safe fn tsx(state: &mut State);
	pub safe fn txa(state: &mut State);
	pub safe fn txs(state: &mut State);
	pub safe fn tya(state: &mut State);
	pub safe fn lax_zero_page(state: &mut State, val: u8);
	pub safe fn lax_zero_page_y(state: &mut State, val: u8);
	pub safe fn lax_absolute(state: &mut State, val: u8);
	pub safe fn lax_absolute_y(state: &mut State, val: u8);
	pub safe fn lax_indirect_x(state: &mut State, val: u8);
	pub safe fn lax_indirect_y(state: &mut State, val: u8);
	pub safe fn sax_zero_page(state: &mut State, val: u8);
	pub safe fn sax_zero_page_y(state: &mut State, val: u8);
	pub safe fn sax_absolute(state: &mut State, val: u8);
	pub safe fn sax_indirect_x(state: &mut State, val: u8);
	pub safe fn dcp_zero_page(state: &mut State, val: u8);
	pub safe fn dcp_zero_page_x(state: &mut State, val: u8);
	pub safe fn dcp_absolute(state: &mut State, val: u8);
	pub safe fn dcp_absolute_x(state: &mut State, val: u8);
	pub safe fn dcp_absolute_y(state: &mut State, val: u8);
	pub safe fn dcp_indirect_x(state: &mut State, val: u8);
	pub safe fn dcp_indirect_y(state: &mut State, val: u8);
	pub safe fn isc_zero_page(state: &mut State, val: u8);
	pub safe fn isc_zero_page_x(state: &mut State, val: u8);
	pub safe fn isc_absolute(state: &mut State, val: u8);
	pub safe fn isc_absolute_x(state: &mut State, val: u8);
	pub safe fn isc_absolute_y(state: &mut State, val: u8);
	pub safe fn isc_indirect_x(state: &mut State, val: u8);
	pub safe fn isc_indirect_y(state: &mut State, val: u8);
	pub safe fn rla_zero_page(state: &mut State, val: u8);
	pub safe fn rla_zero_page_x(state: &mut State, val: u8);
	pub safe fn rla_absolute(state: &mut State, val: u8);
	pub safe fn rla_absolute_x(state: &mut State, val: u8);
	pub safe fn rla_absolute_y(state: &mut State, val: u8);
	pub safe fn rla_indirect_x(state: &mut State, val: u8);
	pub safe fn rla_indirect_y(state: &mut State, val: u8);
	pub safe fn rra_zero_page(state: &mut State, val: u8);
	pub safe fn rra_zero_page_x(state: &mut State, val: u8);
	pub safe fn rra_absolute(state: &mut State, val: u8);
	pub safe fn rra_absolute_x(state: &mut State, val: u8);
	pub safe fn rra_absolute_y(state: &mut State, val: u8);
	pub safe fn rra_indirect_x(state: &mut State, val: u8);
	pub safe fn rra_indirect_y(state: &mut State, val: u8);
	pub safe fn slo_zero_page(state: &mut State, val: u8);
	pub safe fn slo_zero_page_x(state: &mut State, val: u8);
	pub safe fn slo_absolute(state: &mut State, val: u8);
	pub safe fn slo_absolute_x(state: &mut State, val: u8);
	pub safe fn slo_absolute_y(state: &mut State, val: u8);
	pub safe fn slo_indirect_x(state: &mut State, val: u8);
	pub safe fn slo_indirect_y(state: &mut State, val: u8);
	pub safe fn sre_zero_page(state: &mut State, val: u8);
	pub safe fn sre_zero_page_x(state: &mut State, val: u8);
	pub safe fn sre_absolute(state: &mut State, val: u8);
	pub safe fn sre_absolute_x(state: &mut State, val: u8);
	pub safe fn sre_absolute_y(state: &mut State, val: u8);
	pub safe fn sre_indirect_x(state: &mut State, val: u8);
	pub safe fn sre_indirect_y(state: &mut State, val: u8);
	pub safe fn anc(state: &mut State, val: u8);
	pub safe fn alr(state: &mut State, val: u8);
	pub safe fn arr(state: &mut State, val: u8);
	pub safe fn axs(state: &mut State, val: u8);
	pub safe fn las(state: &mut State, val: u8);
	pub safe fn tas(state: &mut State, val: u8);
	pub safe fn shy(state: &mut State, val: u8);
	pub safe fn shx(state: &mut State, val: u8);
	pub safe fn ahx_absolute_y(state: &mut State, val: u8);
	pub safe fn ahx_indirect_y(state: &mut State, val: u8);
}
