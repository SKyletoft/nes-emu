#![allow(unused)]

// Auto-generated NES CPU instruction set
pub enum Inst {
	ADC(ADC),
	AND(AND),
	ASL(ASL),
	BCC(i8),
	BCS(i8),
	BEQ(i8),
	BIT(BIT),
	BMI(i8),
	BNE(i8),
	BPL(i8),
	BRK,
	BVC(i8),
	BVS(i8),
	CLC,
	CLD,
	CLI,
	CLV,
	CMP(CMP),
	CPX(CPX),
	CPY(CPY),
	DEC(DEC),
	DEX,
	DEY,
	EOR(EOR),
	INC(INC),
	INX,
	INY,
	JMP(JMP),
	JSR(u8, u8),
	LDA(LDA),
	LDX(LDX),
	LDY(LDY),
	LSR(LSR),
	NOP,
	ORA(ORA),
	PHA,
	PHP,
	PLA,
	PLP,
	ROL(ROL),
	ROR(ROR),
	RTI,
	RTS,
	SBC(SBC),
	SEC,
	SED,
	SEI,
	STA(STA),
	STX(STX),
	STY(STY),
	TAX,
	TAY,
	TSX,
	TXA,
	TXS,
	TYA,
	LAX(LAX),
	SAX(SAX),
	DCP(DCP),
	ISC(ISC),
	RLA(RLA),
	RRA(RRA),
	SLO(SLO),
	SRE(SRE),
	ANC(u8),
	ALR(u8),
	ARR(u8),
	AXS(u8),
	LAS(u8, u8),
	TAS(u8, u8),
	SHY(u8, u8),
	SHX(u8, u8),
	AHX(AHX),
	NOPU(NOPU),
}

pub enum ADC {
	Immediate(u8),
	ZeroPage(u8),
	ZeroPageX(u8),
	Absolute(u8, u8),
	AbsoluteX(u8, u8),
	AbsoluteY(u8, u8),
	IndirectX(u8),
	IndirectY(u8),
}

pub enum AND {
	Immediate(u8),
	ZeroPage(u8),
	ZeroPageX(u8),
	Absolute(u8, u8),
	AbsoluteX(u8, u8),
	AbsoluteY(u8, u8),
	IndirectX(u8),
	IndirectY(u8),
}

pub enum ASL {
	Accumulator,
	ZeroPage(u8),
	ZeroPageX(u8),
	Absolute(u8, u8),
	AbsoluteX(u8, u8),
}

pub enum BIT {
	ZeroPage(u8),
	Absolute(u8, u8),
}

pub enum CMP {
	Immediate(u8),
	ZeroPage(u8),
	ZeroPageX(u8),
	Absolute(u8, u8),
	AbsoluteX(u8, u8),
	AbsoluteY(u8, u8),
	IndirectX(u8),
	IndirectY(u8),
}

pub enum CPX {
	Immediate(u8),
	ZeroPage(u8),
	Absolute(u8, u8),
}

pub enum CPY {
	Immediate(u8),
	ZeroPage(u8),
	Absolute(u8, u8),
}

pub enum DEC {
	ZeroPage(u8),
	ZeroPageX(u8),
	Absolute(u8, u8),
	AbsoluteX(u8, u8),
}

pub enum EOR {
	Immediate(u8),
	ZeroPage(u8),
	ZeroPageX(u8),
	Absolute(u8, u8),
	AbsoluteX(u8, u8),
	AbsoluteY(u8, u8),
	IndirectX(u8),
	IndirectY(u8),
}

pub enum INC {
	ZeroPage(u8),
	ZeroPageX(u8),
	Absolute(u8, u8),
	AbsoluteX(u8, u8),
}

pub enum JMP {
	Absolute(u8, u8),
	Indirect(u8, u8),
}

pub enum LDA {
	Immediate(u8),
	ZeroPage(u8),
	ZeroPageX(u8),
	Absolute(u8, u8),
	AbsoluteX(u8, u8),
	AbsoluteY(u8, u8),
	IndirectX(u8),
	IndirectY(u8),
}

pub enum LDX {
	Immediate(u8),
	ZeroPage(u8),
	ZeroPageY(u8),
	Absolute(u8, u8),
	AbsoluteY(u8, u8),
}

pub enum LDY {
	Immediate(u8),
	ZeroPage(u8),
	ZeroPageX(u8),
	Absolute(u8, u8),
	AbsoluteX(u8, u8),
}

pub enum LSR {
	Accumulator,
	ZeroPage(u8),
	ZeroPageX(u8),
	Absolute(u8, u8),
	AbsoluteX(u8, u8),
}

pub enum ORA {
	Immediate(u8),
	ZeroPage(u8),
	ZeroPageX(u8),
	Absolute(u8, u8),
	AbsoluteX(u8, u8),
	AbsoluteY(u8, u8),
	IndirectX(u8),
	IndirectY(u8),
}

pub enum ROL {
	Accumulator,
	ZeroPage(u8),
	ZeroPageX(u8),
	Absolute(u8, u8),
	AbsoluteX(u8, u8),
}

pub enum ROR {
	Accumulator,
	ZeroPage(u8),
	ZeroPageX(u8),
	Absolute(u8, u8),
	AbsoluteX(u8, u8),
}

pub enum SBC {
	Immediate(u8),
	ZeroPage(u8),
	ZeroPageX(u8),
	Absolute(u8, u8),
	AbsoluteX(u8, u8),
	AbsoluteY(u8, u8),
	IndirectX(u8),
	IndirectY(u8),
}

pub enum STA {
	ZeroPage(u8),
	ZeroPageX(u8),
	Absolute(u8, u8),
	AbsoluteX(u8, u8),
	AbsoluteY(u8, u8),
	IndirectX(u8),
	IndirectY(u8),
}

pub enum STX {
	ZeroPage(u8),
	ZeroPageY(u8),
	Absolute(u8, u8),
}

pub enum STY {
	ZeroPage(u8),
	ZeroPageX(u8),
	Absolute(u8, u8),
}

pub enum LAX {
	ZeroPage(u8),
	ZeroPageY(u8),
	Absolute(u8, u8),
	AbsoluteY(u8, u8),
	IndirectX(u8),
	IndirectY(u8),
}

pub enum SAX {
	ZeroPage(u8),
	ZeroPageY(u8),
	Absolute(u8, u8),
	IndirectX(u8),
}

pub enum DCP {
	ZeroPage(u8),
	ZeroPageX(u8),
	Absolute(u8, u8),
	AbsoluteX(u8, u8),
	AbsoluteY(u8, u8),
	IndirectX(u8),
	IndirectY(u8),
}

pub enum ISC {
	ZeroPage(u8),
	ZeroPageX(u8),
	Absolute(u8, u8),
	AbsoluteX(u8, u8),
	AbsoluteY(u8, u8),
	IndirectX(u8),
	IndirectY(u8),
}

pub enum RLA {
	ZeroPage(u8),
	ZeroPageX(u8),
	Absolute(u8, u8),
	AbsoluteX(u8, u8),
	AbsoluteY(u8, u8),
	IndirectX(u8),
	IndirectY(u8),
}

pub enum RRA {
	ZeroPage(u8),
	ZeroPageX(u8),
	Absolute(u8, u8),
	AbsoluteX(u8, u8),
	AbsoluteY(u8, u8),
	IndirectX(u8),
	IndirectY(u8),
}

pub enum SLO {
	ZeroPage(u8),
	ZeroPageX(u8),
	Absolute(u8, u8),
	AbsoluteX(u8, u8),
	AbsoluteY(u8, u8),
	IndirectX(u8),
	IndirectY(u8),
}

pub enum SRE {
	ZeroPage(u8),
	ZeroPageX(u8),
	Absolute(u8, u8),
	AbsoluteX(u8, u8),
	AbsoluteY(u8, u8),
	IndirectX(u8),
	IndirectY(u8),
}

pub enum AHX {
	AbsoluteY(u8, u8),
	IndirectY(u8),
}

pub enum NOPU {
	Immediate(u8),
	ZeroPage(u8),
	ZeroPageX(u8),
	Absolute(u8, u8),
	AbsoluteX(u8, u8),
	AbsoluteY(u8, u8),
}

impl Inst {
	fn ends_bb(&self) -> bool {
		match self {
			Inst::ADC(..) => false,
			Inst::AND(..) => false,
			Inst::ASL(..) => false,
			Inst::BCC(..) => true,
			Inst::BCS(..) => true,
			Inst::BEQ(..) => true,
			Inst::BIT(..) => false,
			Inst::BMI(..) => true,
			Inst::BNE(..) => true,
			Inst::BPL(..) => true,
			Inst::BRK => false,
			Inst::BVC(..) => true,
			Inst::BVS(..) => true,
			Inst::CLC => false,
			Inst::CLD => false,
			Inst::CLI => false,
			Inst::CLV => false,
			Inst::CMP(..) => false,
			Inst::CPX(..) => false,
			Inst::CPY(..) => false,
			Inst::DEC(..) => false,
			Inst::DEX => false,
			Inst::DEY => false,
			Inst::EOR(..) => false,
			Inst::INC(..) => false,
			Inst::INX => false,
			Inst::INY => false,
			Inst::JMP(..) => true,
			Inst::JSR(..) => true,
			Inst::LDA(..) => false,
			Inst::LDX(..) => false,
			Inst::LDY(..) => false,
			Inst::LSR(..) => false,
			Inst::NOP => false,
			Inst::ORA(..) => false,
			Inst::PHA => false,
			Inst::PHP => false,
			Inst::PLA => false,
			Inst::PLP => false,
			Inst::ROL(..) => false,
			Inst::ROR(..) => false,
			Inst::RTI => true,
			Inst::RTS => true,
			Inst::SBC(..) => false,
			Inst::SEC => false,
			Inst::SED => false,
			Inst::SEI => false,
			Inst::STA(..) => false,
			Inst::STX(..) => false,
			Inst::STY(..) => false,
			Inst::TAX => false,
			Inst::TAY => false,
			Inst::TSX => false,
			Inst::TXA => false,
			Inst::TXS => false,
			Inst::TYA => false,
			Inst::LAX(..) => false,
			Inst::SAX(..) => false,
			Inst::DCP(..) => false,
			Inst::ISC(..) => false,
			Inst::RLA(..) => false,
			Inst::RRA(..) => false,
			Inst::SLO(..) => false,
			Inst::SRE(..) => false,
			Inst::ANC(..) => false,
			Inst::ALR(..) => false,
			Inst::ARR(..) => false,
			Inst::AXS(..) => false,
			Inst::LAS(..) => false,
			Inst::TAS(..) => false,
			Inst::SHY(..) => false,
			Inst::SHX(..) => false,
			Inst::AHX(..) => false,
			Inst::NOPU(..) => false,
		}
	}

	pub fn len(&self) -> u8 {
		match self {
			Inst::ADC(ADC::Immediate(..)) => 2,
			Inst::ADC(ADC::ZeroPage(..)) => 2,
			Inst::ADC(ADC::ZeroPageX(..)) => 2,
			Inst::ADC(ADC::Absolute(..)) => 3,
			Inst::ADC(ADC::AbsoluteX(..)) => 3,
			Inst::ADC(ADC::AbsoluteY(..)) => 3,
			Inst::ADC(ADC::IndirectX(..)) => 2,
			Inst::ADC(ADC::IndirectY(..)) => 2,
			Inst::AND(AND::Immediate(..)) => 2,
			Inst::AND(AND::ZeroPage(..)) => 2,
			Inst::AND(AND::ZeroPageX(..)) => 2,
			Inst::AND(AND::Absolute(..)) => 3,
			Inst::AND(AND::AbsoluteX(..)) => 3,
			Inst::AND(AND::AbsoluteY(..)) => 3,
			Inst::AND(AND::IndirectX(..)) => 2,
			Inst::AND(AND::IndirectY(..)) => 2,
			Inst::ASL(ASL::Accumulator) => 1,
			Inst::ASL(ASL::ZeroPage(..)) => 2,
			Inst::ASL(ASL::ZeroPageX(..)) => 2,
			Inst::ASL(ASL::Absolute(..)) => 3,
			Inst::ASL(ASL::AbsoluteX(..)) => 3,
			Inst::BCC(..) => 2,
			Inst::BCS(..) => 2,
			Inst::BEQ(..) => 2,
			Inst::BIT(BIT::ZeroPage(..)) => 2,
			Inst::BIT(BIT::Absolute(..)) => 3,
			Inst::BMI(..) => 2,
			Inst::BNE(..) => 2,
			Inst::BPL(..) => 2,
			Inst::BRK => 1,
			Inst::BVC(..) => 2,
			Inst::BVS(..) => 2,
			Inst::CLC => 1,
			Inst::CLD => 1,
			Inst::CLI => 1,
			Inst::CLV => 1,
			Inst::CMP(CMP::Immediate(..)) => 2,
			Inst::CMP(CMP::ZeroPage(..)) => 2,
			Inst::CMP(CMP::ZeroPageX(..)) => 2,
			Inst::CMP(CMP::Absolute(..)) => 3,
			Inst::CMP(CMP::AbsoluteX(..)) => 3,
			Inst::CMP(CMP::AbsoluteY(..)) => 3,
			Inst::CMP(CMP::IndirectX(..)) => 2,
			Inst::CMP(CMP::IndirectY(..)) => 2,
			Inst::CPX(CPX::Immediate(..)) => 2,
			Inst::CPX(CPX::ZeroPage(..)) => 2,
			Inst::CPX(CPX::Absolute(..)) => 3,
			Inst::CPY(CPY::Immediate(..)) => 2,
			Inst::CPY(CPY::ZeroPage(..)) => 2,
			Inst::CPY(CPY::Absolute(..)) => 3,
			Inst::DEC(DEC::ZeroPage(..)) => 2,
			Inst::DEC(DEC::ZeroPageX(..)) => 2,
			Inst::DEC(DEC::Absolute(..)) => 3,
			Inst::DEC(DEC::AbsoluteX(..)) => 3,
			Inst::DEX => 1,
			Inst::DEY => 1,
			Inst::EOR(EOR::Immediate(..)) => 2,
			Inst::EOR(EOR::ZeroPage(..)) => 2,
			Inst::EOR(EOR::ZeroPageX(..)) => 2,
			Inst::EOR(EOR::Absolute(..)) => 3,
			Inst::EOR(EOR::AbsoluteX(..)) => 3,
			Inst::EOR(EOR::AbsoluteY(..)) => 3,
			Inst::EOR(EOR::IndirectX(..)) => 2,
			Inst::EOR(EOR::IndirectY(..)) => 2,
			Inst::INC(INC::ZeroPage(..)) => 2,
			Inst::INC(INC::ZeroPageX(..)) => 2,
			Inst::INC(INC::Absolute(..)) => 3,
			Inst::INC(INC::AbsoluteX(..)) => 3,
			Inst::INX => 1,
			Inst::INY => 1,
			Inst::JMP(JMP::Absolute(..)) => 3,
			Inst::JMP(JMP::Indirect(..)) => 3,
			Inst::JSR(..) => 3,
			Inst::LDA(LDA::Immediate(..)) => 2,
			Inst::LDA(LDA::ZeroPage(..)) => 2,
			Inst::LDA(LDA::ZeroPageX(..)) => 2,
			Inst::LDA(LDA::Absolute(..)) => 3,
			Inst::LDA(LDA::AbsoluteX(..)) => 3,
			Inst::LDA(LDA::AbsoluteY(..)) => 3,
			Inst::LDA(LDA::IndirectX(..)) => 2,
			Inst::LDA(LDA::IndirectY(..)) => 2,
			Inst::LDX(LDX::Immediate(..)) => 2,
			Inst::LDX(LDX::ZeroPage(..)) => 2,
			Inst::LDX(LDX::ZeroPageY(..)) => 2,
			Inst::LDX(LDX::Absolute(..)) => 3,
			Inst::LDX(LDX::AbsoluteY(..)) => 3,
			Inst::LDY(LDY::Immediate(..)) => 2,
			Inst::LDY(LDY::ZeroPage(..)) => 2,
			Inst::LDY(LDY::ZeroPageX(..)) => 2,
			Inst::LDY(LDY::Absolute(..)) => 3,
			Inst::LDY(LDY::AbsoluteX(..)) => 3,
			Inst::LSR(LSR::Accumulator) => 1,
			Inst::LSR(LSR::ZeroPage(..)) => 2,
			Inst::LSR(LSR::ZeroPageX(..)) => 2,
			Inst::LSR(LSR::Absolute(..)) => 3,
			Inst::LSR(LSR::AbsoluteX(..)) => 3,
			Inst::NOP => 1,
			Inst::ORA(ORA::Immediate(..)) => 2,
			Inst::ORA(ORA::ZeroPage(..)) => 2,
			Inst::ORA(ORA::ZeroPageX(..)) => 2,
			Inst::ORA(ORA::Absolute(..)) => 3,
			Inst::ORA(ORA::AbsoluteX(..)) => 3,
			Inst::ORA(ORA::AbsoluteY(..)) => 3,
			Inst::ORA(ORA::IndirectX(..)) => 2,
			Inst::ORA(ORA::IndirectY(..)) => 2,
			Inst::PHA => 1,
			Inst::PHP => 1,
			Inst::PLA => 1,
			Inst::PLP => 1,
			Inst::ROL(ROL::Accumulator) => 1,
			Inst::ROL(ROL::ZeroPage(..)) => 2,
			Inst::ROL(ROL::ZeroPageX(..)) => 2,
			Inst::ROL(ROL::Absolute(..)) => 3,
			Inst::ROL(ROL::AbsoluteX(..)) => 3,
			Inst::ROR(ROR::Accumulator) => 1,
			Inst::ROR(ROR::ZeroPage(..)) => 2,
			Inst::ROR(ROR::ZeroPageX(..)) => 2,
			Inst::ROR(ROR::Absolute(..)) => 3,
			Inst::ROR(ROR::AbsoluteX(..)) => 3,
			Inst::RTI => 1,
			Inst::RTS => 1,
			Inst::SBC(SBC::Immediate(..)) => 2,
			Inst::SBC(SBC::ZeroPage(..)) => 2,
			Inst::SBC(SBC::ZeroPageX(..)) => 2,
			Inst::SBC(SBC::Absolute(..)) => 3,
			Inst::SBC(SBC::AbsoluteX(..)) => 3,
			Inst::SBC(SBC::AbsoluteY(..)) => 3,
			Inst::SBC(SBC::IndirectX(..)) => 2,
			Inst::SBC(SBC::IndirectY(..)) => 2,
			Inst::SEC => 1,
			Inst::SED => 1,
			Inst::SEI => 1,
			Inst::STA(STA::ZeroPage(..)) => 2,
			Inst::STA(STA::ZeroPageX(..)) => 2,
			Inst::STA(STA::Absolute(..)) => 3,
			Inst::STA(STA::AbsoluteX(..)) => 3,
			Inst::STA(STA::AbsoluteY(..)) => 3,
			Inst::STA(STA::IndirectX(..)) => 2,
			Inst::STA(STA::IndirectY(..)) => 2,
			Inst::STX(STX::ZeroPage(..)) => 2,
			Inst::STX(STX::ZeroPageY(..)) => 2,
			Inst::STX(STX::Absolute(..)) => 3,
			Inst::STY(STY::ZeroPage(..)) => 2,
			Inst::STY(STY::ZeroPageX(..)) => 2,
			Inst::STY(STY::Absolute(..)) => 3,
			Inst::TAX => 1,
			Inst::TAY => 1,
			Inst::TSX => 1,
			Inst::TXA => 1,
			Inst::TXS => 1,
			Inst::TYA => 1,
			Inst::LAX(LAX::ZeroPage(..)) => 2,
			Inst::LAX(LAX::ZeroPageY(..)) => 2,
			Inst::LAX(LAX::Absolute(..)) => 3,
			Inst::LAX(LAX::AbsoluteY(..)) => 3,
			Inst::LAX(LAX::IndirectX(..)) => 2,
			Inst::LAX(LAX::IndirectY(..)) => 2,
			Inst::SAX(SAX::ZeroPage(..)) => 2,
			Inst::SAX(SAX::ZeroPageY(..)) => 2,
			Inst::SAX(SAX::Absolute(..)) => 3,
			Inst::SAX(SAX::IndirectX(..)) => 2,
			Inst::DCP(DCP::ZeroPage(..)) => 2,
			Inst::DCP(DCP::ZeroPageX(..)) => 2,
			Inst::DCP(DCP::Absolute(..)) => 3,
			Inst::DCP(DCP::AbsoluteX(..)) => 3,
			Inst::DCP(DCP::AbsoluteY(..)) => 3,
			Inst::DCP(DCP::IndirectX(..)) => 2,
			Inst::DCP(DCP::IndirectY(..)) => 2,
			Inst::ISC(ISC::ZeroPage(..)) => 2,
			Inst::ISC(ISC::ZeroPageX(..)) => 2,
			Inst::ISC(ISC::Absolute(..)) => 3,
			Inst::ISC(ISC::AbsoluteX(..)) => 3,
			Inst::ISC(ISC::AbsoluteY(..)) => 3,
			Inst::ISC(ISC::IndirectX(..)) => 2,
			Inst::ISC(ISC::IndirectY(..)) => 2,
			Inst::RLA(RLA::ZeroPage(..)) => 2,
			Inst::RLA(RLA::ZeroPageX(..)) => 2,
			Inst::RLA(RLA::Absolute(..)) => 3,
			Inst::RLA(RLA::AbsoluteX(..)) => 3,
			Inst::RLA(RLA::AbsoluteY(..)) => 3,
			Inst::RLA(RLA::IndirectX(..)) => 2,
			Inst::RLA(RLA::IndirectY(..)) => 2,
			Inst::RRA(RRA::ZeroPage(..)) => 2,
			Inst::RRA(RRA::ZeroPageX(..)) => 2,
			Inst::RRA(RRA::Absolute(..)) => 3,
			Inst::RRA(RRA::AbsoluteX(..)) => 3,
			Inst::RRA(RRA::AbsoluteY(..)) => 3,
			Inst::RRA(RRA::IndirectX(..)) => 2,
			Inst::RRA(RRA::IndirectY(..)) => 2,
			Inst::SLO(SLO::ZeroPage(..)) => 2,
			Inst::SLO(SLO::ZeroPageX(..)) => 2,
			Inst::SLO(SLO::Absolute(..)) => 3,
			Inst::SLO(SLO::AbsoluteX(..)) => 3,
			Inst::SLO(SLO::AbsoluteY(..)) => 3,
			Inst::SLO(SLO::IndirectX(..)) => 2,
			Inst::SLO(SLO::IndirectY(..)) => 2,
			Inst::SRE(SRE::ZeroPage(..)) => 2,
			Inst::SRE(SRE::ZeroPageX(..)) => 2,
			Inst::SRE(SRE::Absolute(..)) => 3,
			Inst::SRE(SRE::AbsoluteX(..)) => 3,
			Inst::SRE(SRE::AbsoluteY(..)) => 3,
			Inst::SRE(SRE::IndirectX(..)) => 2,
			Inst::SRE(SRE::IndirectY(..)) => 2,
			Inst::ANC(..) => 2,
			Inst::ALR(..) => 2,
			Inst::ARR(..) => 2,
			Inst::AXS(..) => 2,
			Inst::LAS(..) => 3,
			Inst::TAS(..) => 3,
			Inst::SHY(..) => 3,
			Inst::SHX(..) => 3,
			Inst::AHX(AHX::AbsoluteY(..)) => 3,
			Inst::AHX(AHX::IndirectY(..)) => 2,
			Inst::NOPU(NOPU::Immediate(..)) => 2,
			Inst::NOPU(NOPU::ZeroPage(..)) => 2,
			Inst::NOPU(NOPU::ZeroPageX(..)) => 2,
			Inst::NOPU(NOPU::Absolute(..)) => 3,
			Inst::NOPU(NOPU::AbsoluteX(..)) => 3,
			Inst::NOPU(NOPU::AbsoluteY(..)) => 3,
		}
	}
}
